#!/usr/bin/env bash

exit_error () {
  print ${1}
  exit 1
}

CI_COMMIT_REF_SLUG=$(git tag --sort=-version:refname | grep "$(git symbolic-ref -q --short HEAD)" | tr -d "v" | sort -t. -k 1,1nr -k 2,2nr -k 3,3nr -k 4,4nr | head -n 1)
echo -e "\n\n\t Last Tag : ${CI_COMMIT_REF_SLUG}"
echo -e -n  "\t New Tag: $(git symbolic-ref -q --short HEAD)."; read CI_COMMIT_REF_SLUG

CI_COMMIT_REF_SLUG=$(echo "$(git symbolic-ref -q --short HEAD).${CI_COMMIT_REF_SLUG}")
CI_COMMIT_SHA=$(git rev-parse --verify HEAD)

if [ -z "${3}" ] ;
then
  REPO_NAME=$(pwd -P)
  REPO_NAME=${REPO_NAME#$GOPATH/src}
else
  REPO_NAME=$3
fi

REPO_NAME=${REPO_NAME#/}
REPO_NAME=${REPO_NAME%/}

if [ -z "${4}" ] ;
then
  PACKAGE=$(basename $REPO_NAME)
else
  PACKAGE=$4
fi

DATEBUILD=$(git log -1 --format=%ci ${CI_COMMIT_SHA} | awk '{print $1"T"$2$3}')

if [ "${DATEBUILD}" = "T" ];
then
  DATEBUILD=$(git log -1 --format=%cd --date=iso | awk '{print $1"T"$2$3}')
fi

if [ -z "${CI_COMMIT_REF_SLUG}" ];
then 
  CI_COMMIT_REF_SLUG=$(echo "0.0")
fi

echo -e "\n\t >>> Regen RootCA..."
./makeCertif

echo -e "\n\t >>> Reformat sources..."
go fmt $(go list ./... | grep -v /vendor/)

echo -e "\n\t >>> Reformat import in sources..."
for gofile in $(find . -type f -name "*.go" | grep -v '/vendor/' );
  do echo -e "\t\t  >>> Reformatting import for file : ${gofile}"
  goimports -w ${gofile}
done

echo ${CI_COMMIT_SHA} > COMMIT_SHA
echo ${CI_COMMIT_REF_SLUG} > COMMIT_REF
echo ${DATEBUILD} > DATEBUILD

echo -e "\n\n\n\t Building Code for release :"
echo -e "\t\t Release=${CI_COMMIT_REF_SLUG}"
echo -e "\t\t Build=${CI_COMMIT_SHA}"
echo -e "\t\t Package=${PACKAGE}"
echo -e "\t\t Date=${DATEBUILD}"

echo -e "\n\n\n\n"


